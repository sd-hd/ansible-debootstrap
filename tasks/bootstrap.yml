---
# The reason to use tmpfs here is that dpkg is awful slow, especially when installing to
# slower devices (think thumb drive). It can be configured by the user, however.

- block:
  - name: create another tmpdir
    command: mktemp -d
    register: _mktemp

  - name: set target (tmpfs)
    set_fact:
      _bootstrap_target: "{{ _mktemp.stdout }}"
      _mktemp: None

  - name: mount tmpfs
    command: "mount -t tmpfs -o size=2G none {{ _bootstrap_target }} warn=no"

  when: use_tmpfs

- name: set target
  set_fact:
    _bootstrap_target: "{{ _tgt_root }}"
  when: not use_tmpfs

- name: run bootstrap
  command: "eatmydata debootstrap {{ release }} {{ _bootstrap_target }} {{ use_mirror|default(mirrors[release]) }}"

- name: bind mount pseudo filesystems
  shell: "mkdir {{ _bootstrap_target }}/{{ item }}; mount --rbind /{{ item }} {{ _bootstrap_target }}/{{ item }} warn=no"
  register: _pseudomount
  with_items:
  - proc
  - sys
  - dev
  - dev/pts

- name: Link mtab
  file:
    src: "/proc/mounts"
    dest: "{{ _bootstrap_target }}/etc/mtab"
    state: link

- name: build list of packages to install
  set_fact:
    _install: "{{ install_packages + required_packages['all'] + required_packages[release]|default([]) }}"

- name: add grup-efi-amd64
  set_fact: "{{ _install + ['grub-efi-amd64'] }}"
  when: grub_efi|default(True)

- name: add grup-pc
  set_fact: "{{ _install + ['grub-pc'] }}"
  when: not grub_efi|default(True)

- debug:
    msg: "Going to install: {{ _install|join(', ') }}"
    verbosity: 2

- block:
  - name: place sources.list in /etc/apt
    template:
      src: "{{ item.src }}"
      dest: "{{ _bootstrap_target }}/etc/{{ item.dest|default(item.src) }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0644') }}"
    with_items:
    - { src: 'sources.list.j2', dest: 'apt/sources.list'}

  - name: update sources
    command: "chroot {{ _bootstrap_target }} apt-get update"

  # cut down on fsync
  - name: install eatmydata
    command: "chroot {{ _bootstrap_target }} apt-get -y install eatmydata"

  - name: allow ppa use
    command: "chroot {{ _bootstrap_target }} eatmydata apt-get -y install software-properties-common"
    when: install_ppa|default([])|length > 0

  # A bit ineffective, since we'll be upgrading the cache every time.
  - name: enable ppa
    shell: "chroot  {{ _bootstrap_target }} eatmydata add-apt-repository -yu {{ item }}"
    with_items: "{{ install_ppa|default([]) }}"
    when: install_ppa is defined and install_ppa|length > 0

  - name: install packages
    command: "chroot {{ _bootstrap_target }} eatmydata apt-get -y install {{ _install|join(' ') }}"

  - name: clean up packages
    command: "chroot {{ _bootstrap_target }} eatmydata apt-get clean"

  environment: "{{ _apt_env }}"

- block:
  - name: umount pseudo filesystems
    command: umount {{ _bootstrap_target }}/{{ item }}
    with_items:
    - dev/pts
    - proc
    - sys
    - dev
    #- tmp

  - name: copy data from temp
    shell: cp -a {{ _bootstrap_target }}/* {{ _tgt_root }}/

  - name: bind mount pseudo filesystems
    shell: mkdir {{ _tgt_root }}/{{ item }}; mount --bind /{{ item }} {{ _tgt_root }}/{{ item }}
    register: _pseudomount
    with_items:
    - proc
    - sys
    - dev
    - dev/pts

  - name: umount tmpfs
    command: "umount {{ _bootstrap_target }}"

  - name: remove tmpfs
    file:
      state: absent
      dest: "{{ _bootstrap_target }}"

  when: use_tmpfs
